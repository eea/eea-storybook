(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"./src/addons/volto-eea-design-system/src/ui/Message/Message.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Success",(function(){return Success})),__webpack_require__.d(__webpack_exports__,"Warning",(function(){return Warning})),__webpack_require__.d(__webpack_exports__,"Error",(function(){return Error})),__webpack_require__.d(__webpack_exports__,"Info",(function(){return Info}));__webpack_require__("./node_modules/react/index.js");var semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/semantic-ui-react/dist/es/collections/Message/Message.js"),semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/semantic-ui-react/dist/es/elements/Container/Container.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Components/Message",component:semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__.a,argTypes:{size:{control:{type:"select"},options:["mini","tiny","small","large","big","huge","massive"],description:"message size",table:{type:{summary:"string"},defaultValue:{summary:' "" '}}},header:{description:"message heading",table:{type:{summary:"custom"},defaultValue:{summary:' "" '}}},content:{description:"message content",table:{type:{summary:"custom"},defaultValue:{summary:' "" '}}}}};var Template=function(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__.a,Object.assign({},args))})};Template.displayName="Template";var Default=Template.bind({});Default.args={header:"Basic Message",content:"This is a basic message",size:"small"};var Success=Template.bind({});Success.args={header:"Success header",content:"This is a Success message",icon:"exclamation circle",success:!0,size:"small"},Success.argTypes={success:{description:"message may be formatted to display a positive message",table:{type:{summary:"boolean"},defaultValue:{summary:!1}}}},Success.parameters={controls:{exclude:["icon","success"],hideNoControlsWarning:!0}};var Warning=Template.bind({});Warning.args={header:"Warning header",content:"This is a Warning message",icon:"exclamation circle",warning:!0,size:"small"},Warning.argTypes={warning:{description:"message may be formatted to display warning messages",table:{type:{summary:"boolean"},defaultValue:{summary:!1}}}},Warning.parameters={controls:{exclude:["icon","warning"],hideNoControlsWarning:!0}};var Error=Template.bind({});Error.args={header:"Error header",content:"This is an Error Message",icon:"exclamation circle",error:!0,size:"small"},Error.argTypes={error:{description:"message may be formatted to display an error message",table:{type:{summary:"boolean"},defaultValue:{summary:!1}}}},Error.parameters={controls:{exclude:["icon","error"],hideNoControlsWarning:!0}};var Info=Template.bind({});Info.args={header:"Info header",content:"This is an Info message",icon:"exclamation circle",info:!0,size:"small"},Info.argTypes={info:{description:"message may be formatted to display information",table:{type:{summary:"boolean"},defaultValue:{summary:!1}}}},Info.parameters={controls:{exclude:["icon","info"],hideNoControlsWarning:!0}},Default.parameters=Object.assign({storySource:{source:"(args) => (\n  <Container>\n    <Message {...args}></Message>\n  </Container>\n)"}},Default.parameters),Success.parameters=Object.assign({storySource:{source:"(args) => (\n  <Container>\n    <Message {...args}></Message>\n  </Container>\n)"}},Success.parameters),Warning.parameters=Object.assign({storySource:{source:"(args) => (\n  <Container>\n    <Message {...args}></Message>\n  </Container>\n)"}},Warning.parameters),Error.parameters=Object.assign({storySource:{source:"(args) => (\n  <Container>\n    <Message {...args}></Message>\n  </Container>\n)"}},Error.parameters),Info.parameters=Object.assign({storySource:{source:"(args) => (\n  <Container>\n    <Message {...args}></Message>\n  </Container>\n)"}},Info.parameters)}}]);